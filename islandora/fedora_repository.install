<?php

/**
 * @file fedora_repository.install
 */

/**
 * Implementation of hook_enable().
 */
function fedora_collections_enable() {
  //nothing to do as we do not currently touch the drupal database.
  //other than the variables table
}

/**
 * Implementation of hook_requirements().
 *
 * @return
 *   An array describing the status of the site regarding available updates.
 *   If there is no update data, only one record will be returned, indicating
 *   that the status of core can't be determined. If data is available, there
 *   will be two records: one for core, and another for all of contrib
 *   (assuming there are any contributed modules or themes enabled on the
 *   site). In addition to the fields expected by hook_requirements ('value',
 *   'severity', and optionally 'description'), this array will contain a
 *   'reason' attribute, which is an integer constant to indicate why the
 *   given status is being returned (UPDATE_NOT_SECURE, UPDATE_NOT_CURRENT, or
 *   UPDATE_UNKNOWN). This is used for generating the appropriate e-mail
 *   notification messages during update_cron(), and might be useful for other
 *   modules that invoke update_requirements() to find out if the site is up
 *   to date or not.
 *
 * @see _update_message_text()
 * @see _update_cron_notify()
 */
function fedora_repository_requirements($phase) {
  global $base_url;

  $requirements = array();

  if ($phase == 'install') {

    // Test for SOAP
    $requirements['fedora-soap']['title'] = t("PHP SOAP extension library");
    if (!class_exists('SoapClient')) {
      $requirements['fedora-soap']['value'] = t("Not installed");
      $requirements['fedora-soap']['severity'] = REQUIREMENT_ERROR;
      $requirements['fedora-soap']['description'] = t('Ensure that the PHP SOAP extension is installed.');
    }
    else {
      $requirements['fedora-soap']['value'] = t("Installed");
      $requirements['fedora-soap']['severity'] = REQUIREMENT_OK;
    }

    // Test for Curl
    $requirements['curl']['title'] = "PHP Curl extension library";
    if (!function_exists('curl_init')) {
      $requirements['curl']['value'] = t("Not installed");
      $requirements['curl']['severity'] = REQUIREMENT_ERROR;
      $requirements['curl']['description'] = t("Ensure that the PHP Curl extension is installed.");
    }
    else {
      $requirements['curl']['value'] = t("Installed");
      $requirements['curl']['severity'] = REQUIREMENT_OK;
    }

    // Test for DOM
    $requirements['dom']['title'] = "PHP DOM XML extension library";
    if (!method_exists('DOMDocument', 'loadHTML')) {
      $requirements['dom']['value'] = t("Not installed");
      $requirements['dom']['severity'] = REQUIREMENT_ERROR;
      $requirements['dom']['description'] = t("Ensure that the PHP DOM XML extension is installed.");
    }
    else {
      $requirements['dom']['value'] = t("Installed");
      $requirements['dom']['severity'] = REQUIREMENT_OK;
    }

    // Test for XSLT
    $requirements['xsl']['title'] = "PHP XSL extension library";
    if (!class_exists('XSLTProcessor')) {
      $requirements['xslt']['value'] = t("Not installed");
      $requirements['xslt']['severity'] = REQUIREMENT_ERROR;
      $requirements['xslt']['description'] = t("Ensure that the PHP XSL extension is installed.");
    }
    else {
      $requirements['xslt']['value'] = t("Installed");
      $requirements['xslt']['severity'] = REQUIREMENT_OK;
    }
  }
  elseif ($phase == 'runtime') {
    module_load_include('inc', 'fedora_repository', 'api/fedora_utils');

    $requirements['fedora-repository']['title'] = t("Fedora server");
    if (!fedora_available()) {
      $requirements['fedora-repository']['value'] = t("Not available");
      $requirements['fedora-repository']['severity'] = REQUIREMENT_ERROR;
      $requirements['fedora-repository']['description'] = t('Ensure that Fedora is running and that the <a href="@collection-settings">collection settings</a> are correct.', array('@collection-settings' => $base_url . '/admin/settings/fedora_repository'));
    }
    else {
      $requirements['fedora-repository']['value'] = t("Available");
      $requirements['fedora-repository']['severity'] = REQUIREMENT_OK;
    }
  }

  return $requirements;
}
