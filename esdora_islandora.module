<?php

// $Id$

/*
 * Created 2011
 *
 * To change the template for this generated file go to
 * Window - Preferences - PHPeclipse - PHP - Code Templates
 */

/**
 * Drupal hook for admin form
 * fedora_repository_name is the name of the top level collection this module will query
 * fedora_repository_pid is the name of the top level pid.
 * Stores this info in the drupal variables table.
 * the name and pid can also be passed as url parameters
 */


function esdora_islandora_admin() {
return "";
 
}


function esdora_islandora_admin_settings_submit($form, $form_values) {
  drupal_set_message("Custom form handler.");
}

/**
 * drupal hook
 * calls the fedora_repositorys_admin form
 */
function esdora_islandora_menu() {
 //return "";

 return array(
  'ajax/gettabs' => array(
 	  'access callback' => 'user_access',
      'page callback' => 'esdora_islandora_get_tabs',
      'type' => MENU_CALLBACK,
  		
    ),

  );
}

/**
 * drupal hook to show help
 */
function esdora_islandora_help($path, $arg) {
  switch ($path) {
    case 'admin/modules#description' :
      return t('Grabs a list of items from a collection in Drupal that are presented on the home page.');
    case 'node/add#fedora_repository' :
      return t('Use this page to grab a list of items from a Fedora collection.');
  }
}


/**
 * 
 * This is a php call back function referenced in the islandora/xsl/sparcal-to-html.xsl
 * the call back is a general mechanism for php xslt engine to call any functions from 
 * within the xsl template, and the function can be located in any loaded php libraries files.
 * The usage is in the context of the php core class, XsltProcessor. The class need to register the callback: ->registerPHPFunctions()
 * which may put restrictions on which functions - parseContent() has no restriction, maiking 
 * it open to all php functions. 
 * @see ObjectHelper.inc->parseContent($content, $pid, $dsId, $collection, $pageNumber = NULL)
 * @see XSLTProcessor
 * @param string $collection_pid: the PID of the collection object
 */
function get_child_count($collection_pid) {
	
	$query='select count (select $object from <#ri>
			where $object <fedora-rels-ext:isMemberOf> <info:fedora/' .$collection_pid . '>)
			from <#ri>
			where
			$s $p $o';
	
	$query_string = htmlentities(urlencode($query));
	$content = '';
    $url = variable_get('fedora_repository_url', 'http://localhost:8080/fedora/risearch');
    $url .= "?lang=itql&format=Simple&query=" . $query_string;
    $content .= (do_curl($url));
   	if(strlen($content)>0) {
	   	$tokens = explode('"', trim($content));
	   	$value = $tokens[1];
	   	if($value==0) {
			return "Data Object";
	   	}else {
	   		return 'Collection Object (total items: ' . $value . ')';
	   	}   	
   }
   return $content;
}

function esdora_islandora_get_tabs(){
	$pid = $_POST['pid'];
	$case = $_POST['tab'];
	$pid = str_replace('"/', "", $pid);
	$pid= trim($pid);
	$case = trim($case);
	module_load_include('inc','esdora_islandora','plugins/esdora');
	$esdora = new Esdora($pid);
	$content ='<div>';
	if( $case == "Items")
		$content.= $esdora->getItems();	
	elseif( $case == "Metadata")
	{
		$content.= $esdora->getMetadata();	
	}
	elseif( $case == "Description")
		$content.= $esdora->getDescription();
	elseif( $case == "History")
		$content.= $esdora->getHistory();			
	else
		$content.= 'oops';
	
	$content.='</div>';
	//$content = '<table><tr><td>title</td><td>this is a test</td></tr></table>';
	echo drupal_json($content);
}


 function magic_tabs_Esdora_callback( $active=0,$pid ) {
 	module_load_include('inc', 'esdora_islandora','plugins/esdora');
 	$active = 0;
 	$esdora = new Esdora($pid);
 	  $tabs[] = array(
	    'title' => t('Items'),
  	    'content' =>$esdora->getItems(),
	  );
	  $tabs[] = array(
	    'title' => t('Metadata'),
	    'content' => $esdora->getMetadata(),
	  );
	  $tabs[] = array(
	    'title' => t('Description'),
	    'content' => $esdora->getDescription(),
	  );
	  $tabs[] = array(
	    'title' => t('History'),
	    'content' => $esdora->getHistory(),
	  );
	 return $tabs;
}


